import numpy as np
s_denominator = [1.0, -0.9069156077619704546611100958907, 1.5293661055172794218851000115709, -1.3305078472428704997924405998946, 4.4968232551138192504293296310469, -3.643307686160885189571021315735, 5.0591421654005333648173285989584, -3.9680348828684741516282238844441, 7.7979869923001525555419716011603, -5.6787668650798773318390241251325, 6.7461808991030171787290084655202, -4.7681736543225270626218801962312, 6.9831467615979398145072291156288, -4.5708377966498534551055577288488, 4.7493485977193187914898953961797, -3.0146231059892934791801075739166, 3.5976174957926978808150849276691, -2.1075263091022129434316324027679, 1.9408205363171635941747445014815, -1.0989632373880210302790831596926, 1.1149714065868022777352515670385, -0.57967729673075709341288884115344, 0.47673974687740026454760821879076, -0.23823057069774551497393724093828, 0.21014687914856301174739801259686, -0.095668520118034496165777082338048, 0.07052528827720185317873245681955, -0.030591186284315989670001010513219, 0.02374432324286388223128184630336, -0.0092709656838292050403476823260411, 0.006129509640170998382967326716255, -0.002249541806548829914214898999796, 0.0015447760736609199705963840778706, -0.0005006606621654384417853935782857, 0.00029620874888042771446986066698957, -0.000088228419200427296535641813677525, 0.000053641461523308518363161573335667, -0.000013654462128846818803085760854344, 0.0000071923366396009502901094309238287, -0.0000016137220468058644115644201495119, 0.00000086571707615697189552097567323498, -0.00000015554284176051102674643297633565, 0.000000072333899952920389539499650376359, -0.000000010401975368404694111157711061494, 0.0000000048868194061415909746450033017894, -0.0000000004711166196935753381038723322673, 0.00000000019099909736897522886844925228448, -0.0000000000099411708259211348877811853995432, 0.0000000000040384987607664343141380757278749, 1]










print(len(s_denominator))

# s_denominator = s_denominator[::-1]
s_denominator = np.array(s_denominator)

v = np.floor(np.log10(np.abs(s_denominator)))
# convert nan to 0
# convert inf to 0
# v[np.isnan(v)] = 0
# convert inf to 0
v[np.isinf(v)] = 0
sd = np.round(np.array((s_denominator)/10**v), 3)
sd[np.isnan(sd)] = 0
print(v)
print(sd)
for i in range(10):
    print('$s^{', 48-i, '}$ & $', sd[i], '\\times 10^{', int(v[i]) ,'}$ & $s^{', 38-i, '}$ & $', sd[10+i], '\\times 10^{', int(v[10+i]) ,'}$ & $s^{', 28-i, '}$ & $', sd[20+i],'\\times 10^{', int(v[20+i]) ,'}$  & $s^{', 18-i, '}$ & $', sd[30+i],'\\times 10^{', int(v[30+i]) ,'}$ & $s^{', 8-i, '}$ & $', sd[40+i],'\\times 10^{', int(v[40+i]) ,'}$ \\\\')
    print('\hline')
